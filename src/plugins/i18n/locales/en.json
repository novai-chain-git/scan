{
  "module": {
    "dashboard": "Dashboard",
    "blocks": "Blocks",
    "staking": "Staking",
    "governance": "Governance",
    "parameters": "Parameters",
    "uptime": "Uptime",
    "state-sync": "State Sync",
    "cosmwasm": "Cosmwasm",
    "widget": "Widgets",
    "ibc": "IBC",
    "nft": "NFT",
    "consensus": "Consensus",
    "supply": "Supply",
    "account": "Accounts",
    "ecosystem": "Ecosystem",
    "favorite": "Favorite",
    "add_to_favorite": "Add to favorite",
    "all_blockchains": "All Blockchain",
    "sponsors": "Sponsors",
    "links": "Links",
    "contract":"contract"
  },
  "search": {
    "title":"Novai Chain Block Explorer"
  },
  "pages": {
    "title": "Novai",
    "title_all": "404",
    "tag": "Beta",
    "tag_all": "Page Not Found",
    "slogan": "Novai is not just an explorer but also a wallet and more ... 🛠",
    "description": "Novai Ecosystem Blockchains 🚀",
    "search_placeholder": "Search Chain",
    "description_all": "We couldn't find the page you are looking for",
    "btn_index": "Back to Home"
  },
  "account": {
    "amount": "Amount",
    "received": "Receiving and sending",
    "type": "Type",
    "address": "Address",
    "acc": "Account",
    "acc_num": "Account Number",
    "sequence": "Sequence",
    "pub_key": "Public Key",
    "assets": "Assets",
    "btn_send": "Send",
    "btn_transfer": "Transfer",
    "total_value": "Total Value",
    "delegations": "Delegations",
    "no_delegations": "No Delegations",
    "btn_delegate": "Delegate",
    "btn_redelegate": "Redelegate",
    "btn_withdraw": "Withdraw",
    "btn_unbond": "Unbond",
    "validator": "Validator",
    "delegation": "Delegation",
    "delegator": "Delegator",
    "rewards": "Rewards",
    "action": "Action",
    "unbonding_delegations": "Unbonding Delegations",
    "creation_height": "Creation Height",
    "initial_balance": "Initial Balance",
    "balance": "Balance",
    "completion_time": "Completion Time",
    "transactions": "Transactions",
    "TokenTransfers": "Contract Transfers",
    "ContractCall": "Contract call ",
    "no_transactions": "No data",
    "loading": "Loading...",
    "height": "Height",
    "hash": "Hash",
    "to": "to",
    "from": "from",
    "messages": "Messages",
    "time": "Time",
    "error": "Account does not exists on chain",
    "recent_transaction": "Recent transaction",
    "Chain": "Chain",
    "Token": "Token",
    "Portfolio": "Portfolio %",
    "Amount": "Amount",
    "Expand": "Expand",
    "Collapse": "Collapse",
    "send": "Send",
    "receive": "Receive",
    "contract": "contract",
    "Burn": "Burn",
    "Transfer": "Transfer"
  },
  "block": {
    "estimated_time": "Estimated Time",
    "countdown_for_block": "Countdown For Block",
    "countdown_for_block_input": "Input A New Target Block Number",
    "btn_update": "Update",
    "current_height": "Current Height",
    "remaining_blocks": "Remaining Blocks",
    "average_block_time": "Average Block Time",
    "block_header": "Block Header",
    "last_commit": "Last Commit",
    "recent": "Recent",
    "future": "Future",
    "fees": "Fees",
    "only_tx": "Only show txs in recent blocks"
  },
  "consensus": {
    "monitor": "Monitor",
    "onboard_rate": "Onboard Rate",
    "o": "O",
    "h": "H",
    "r": "R",
    "s": "S",
    "round": "Round",
    "step": "Step",
    "updated_at": "Updated at",
    "proposer_sign": "Proposer Signed",
    "proposer_not_sign": "Proposer Not Signed",
    "sign": "Signed",
    "not_sign": "Not Signed",
    "tips": "Tips",
    "tips_description_1": "This tool is useful for validators to monitor who is onboard during an upgrade",
    "tips_description_2": "If you want to change the default rpc endpoint. make sure that `https` and `CORS` are enabled on your server"
  },
  "cosmwasm": {
    "title": "Novai Wasm Smart Contracts",
    "code_id": "Code Id",
    "code_hash": "Code Hash",
    "creator": "Creator",
    "permissions": "Permissions",
    "btn_up_sc": "Upload Smart Contract",
    "contract_list_code": "Contract List of Code",
    "contract_list": "Contract List",
    "btn_contract": "Contract Info",
    "btn_funds": "Funds",
    "btn_states": "States",
    "btn_fees": "Fees",
    "btn_query": "Query",
    "btn_execute": "Execute",
    "btn_transactions": "Txs",
    "btn_details": "Details",
    "btn_migrate": "Migrate",
    "btn_update_admin": "Update Admin",
    "btn_clear_admin": "Clear Admin",
    "instantiate_contract": "Instantiate Contract",
    "contract_detail": "Contract Detail",
    "contract_balances": "Contract Balances",
    "no_escrowed_assets": "No Escrowed Assets",
    "contract_states": "Contract States",
    "query_contract": "Query Contract",
    "tips_description_1": "This feature is available when deploying contracts via WELLDONE Code. For more information, please check the document at the link below"
  },
  "gov": {
    "voting": "Voting",
    "passed": "Passed",
    "rejected": "Rejected",
    "tally": "Tally",
    "btn_vote": "Vote",
    "btn_deposit": "Deposit",
    "timeline": "Timeline",
    "submit_at": "Submited at",
    "deposited_at": "Deposited at",
    "vote_start_from": "Voting start from",
    "vote_end": "Voting end",
    "current_status": "Current Status",
    "proposal_statuses": {
      "PROPOSAL_STATUS_DEPOSIT_PERIOD": "Deposit period",
      "PROPOSAL_STATUS_VOTING_PERIOD": "Voting period",
      "PROPOSAL_STATUS_PASSED": "Passed",
      "PROPOSAL_STATUS_REJECTED": "Rejected",
      "PROPOSAL_STATUS_FAILED": "Failed"
    },
    "upgrade_plan": "Upgrade Plan",
    "votes": "Votes"
  },
  "ibc": {
    "title": "IBC Connections",
    "title_2": "IBC Client",
    "registry": "Registry",
    "connection_id": "Connection Id",
    "btn_apply": "Apply",
    "trust_parameters": "Trust Parameters",
    "trust_level": "Trust level",
    "trusting_period": "Trusting period",
    "unbonding_period": "Unbonding period",
    "max_clock_drift": "Max clock drift",
    "frozen_height": "Frozen height",
    "latest_height": "Latest height",
    "upgrade_parameters": "Upgrade Parameters",
    "allow_update_after_expiry": "Allow update after expiry",
    "allow_update_after_misbehaviour": "Allow update after misbehaviour",
    "upgrade_path": "Upgrade path",
    "channels": "Channels",
    "txs": "Txs",
    "channel_id": "Channel Id",
    "port_id": "Port Id",
    "state": "State",
    "counterparty": "Counterparty",
    "hops": "Hops",
    "version": "Version",
    "ordering": "Ordering",
    "height": "Height",
    "txhash": "Tx Hash",
    "messages": "Messages",
    "time": "Time",
    "btn_out": "Out",
    "btn_in": "In"
  },
  "staking": {
    "inflation": "Inflation",
    "unbonding_time": "Unbonding Time",
    "double_sign_slashing": "Double Sign Slashing",
    "downtime_slashing": "Downtime Slashing",
    "popular": "Popular",
    "active": "Active",
    "inactive": "Inactive",
    "rank": "Rank",
    "validator": "Validator",
    "voting_power": "Voting Power",
    "24h_changes": "24h Changes",
    "commission": "Commission",
    "actions": "Actions",
    "jailed": "Jailed",
    "top": "Top",
    "description": "Delegating to lower-rank validators will increase the overall security of the network",
    "about_us": "About Us",
    "website": "Website",
    "contact": "Contact",
    "validator_status": "Validator Status",
    "status": "Status",
    "total_bonded": "Total Bonded Tokens",
    "self_bonded": "Self Bonded",
    "min_self": "Min Self Delegation",
    "annual_profit": "Annual Profit",
    "unbonding_height": "Unbonding Height",
    "commissions_&_rewards": "Commissions & Rewards",
    "commissions": "Commissions",
    "outstanding": "Outstanding",
    "addresses": "Addresses",
    "account_addr": "Account Address",
    "operator_addr": "Operator Address",
    "hex_addr": "Hex Address",
    "signer_addr": "Signer Address",
    "consensus_pub_key": "Consensus Public Key",
    "liquid_staking": "Liquid Staking",
    "liquid_staking_shares": "Liquid Shares",
    "validator_bond_share": "Validator Bonded"
  },
  "statesync": {
    "title": "What's State Sync?",
    "title_2": "Starting New Node From State Sync",
    "title_3": "Enable Snapshot For State Sync",
    "description": "The Tendermint Core 0.34 release includes support for state sync, which allows a new node to join a network by fetching a snapshot of the application state at a recent height instead of fetching and replaying all historical blocks. This can reduce the time needed to sync with the network from days to minutes. Click",
    "here": "Here",
    "version": "Version",
    "for_more_info": "For more infomation",
    "text_1": "Install Binary",
    "text_1_1": "We need to install the binary first and make sure that the version is the one currently in use on mainnet",
    "text_2": "Enable State Sync",
    "text_2_1": "We can configure Tendermint to use state sync in $DAEMON_HOME/config/config.toml",
    "text_3": "Start the daemon",
    "text_3_1": "If you are resetting node, run",
    "text_3_2": "before you start the daemon",
    "text_title_3": "To make state sync works, we can enable snapshot in $DAEMON_HOME/config/app.toml"
  },
  "tx": {
    "title": "Summary",
    "tx_hash": "Tx Hash",
    "gas": "Gas",
    "fee": "Fee",
    "memo": "Memo",
    "no_messages": "No messages",
    "overview": "overview",
    "logs": "logs",
    "state": "state",
    "TransactionHash": "Transaction Hash",
    "Block": "Block",
    "Timestamp": "Timestamp",
    "Status": "Status",
    "From": "From",
    "To": "To",
    "InteractedWith": "Interacted With ({0})",
    "Transferred": "ERC-20 Tokens Transferred",
    "swap": "swap",
    "deadline": "deadline",
    "issue": "issue",
    "receive": "receive",
    "Value": "Value",
    "TransactionFee": "Transaction Fee",
    "GasPrice": "Gas Price",
    "Gas": "Gas Limit & Usage by Txn",
    "OtherAttributes": "Other Attributes",
    "InputData": "Input Data",
    "MoreDetails": "More Details",
    "ClickToShowLess": "Click To Show Less",
    "ClickToShowMore": "Click To Show More",
    "Nonce": "Nonce",
    "PositionInBlock": "Position In Block",
    "AllTransfers": "All Transfers",
    "NetTransfers": "Net Transfers",
    "Token": "Token",
    "method": "method"
  },
  "uptime": {
    "overall": "Overall",
    "customize": "Customize",
    "only_consumer_set": "Only Consumer Set",
    "last_jailed_time": "Last Jailed Time",
    "signed_precommits": "Signed Precommits",
    "start_height": "Start Height",
    "tombstoned": "Tombstoned",
    "minimum_uptime": "Minimum uptime per window",
    "my_validators": "My Validators",
    "add_validators_monitor": "Add validators you want to monitor",
    "no": "No",
    "signed_blocks": "Signed Blocks",
    "missing_blocks": "Missing Blocks",
    "add_validators": "Add Validators",
    "add": "Add"
  },
  "widget": {
    "title": "Initial Setting",
    "endpoint": "Endpoint",
    "select_endpoint": "Select Endpoint",
    "text_1": "Import global script",
    "text_2": "Connect Wallet",
    "text_3": "Osmosis Convert"
  },
  "index": {
    "rank": "Rank",
    "price_calculator": "Price Calculator",
    "close": "Close",
    "buy": "Buy",
    "active_proposals": "Active Proposals",
    "no_active_proposals": "No active proposals",
    "more": "More",
    "reward": "Reward",
    "unbonding": "Unbonding",
    "btn_withdraw_reward": "Withdraw Rewards",
    "btn_swap": "Swap",
    "receive": "Receive",
    "app_versions": "Application Versions",
    "node_info": "Node Information"
  },
  "footer": {
    "footer_subtitle": "Novai Chain is a next-generation Layer 1 AI public blockchain.",
    "About_Us": "About Us",
    "Privacy_Policy": "Privacy Policy",
    "Terms_of_Service": "Terms of Service",
    "Services_&_Support": "Services & Support",
    "Medium": "Medium",
    "Contact_Us": "Contact Us",
    "Resources": "Resources",
    "Whitepaper": "Novaichain Whitepaper",
    "Introduce": "Novaichain Introduce"
  },
  "MORE": "MORE",
  "token": {
    "Overview": " Overview",
    "MoreInfo": "More Info",
    "account": "Contract",
    "MultichainInfo": "Multichain Info",
    "MAX_TOTAL_SUPPLY": "MAX TOTAL SUPPLY",
    "currency": "Currency",

    "CONTRACT_CREATOR": "CONTRACT CREATOR",
    "PRICE": "PRICE",
    "ONCHAIN_MARKET_CAP": "ONCHAIN MARKET CAP",
    "CIRCULATING_SUPPLY_MARKET_CAP": "CIRCULATING SUPPLY MARKET CAP",

    "TOKEN_CONTRACT": "TOKEN CONTRACT",

    "Are_you_the_contract_creator": "Are you the contract creator?",
    "Verify_and_Publish": "Verify and Publish",
    "your_contract_source_code_today": "your contract source code today!",

    "ContractSourceCodeVerified": "Contract Source Code Verified",
    "ExactMatch": "Exact Match",
    "ContractName": "Contract Name",
    "OptimizationEnabled": "Optimization Enabled",
    "CompilerVersion": "Compiler Version",
    "OtherSettings": "Other Settings",
    "ContractSourceCode": "Contract Source Code",
    "Solidity": "Solidity",
    "AuditReport": "Audit Report",
    "ContractSecurityAudit": "Contract Security Audit",
    "ContractABI": "Contract ABI",
    "ContractCreationCode": "Contract Creation Code",
    "DeployedBytecode": "Deployed Bytecode",
    "ConstructorArguments": "Constructor Arguments",
    "ABI": "ABI-Encoded and is the last bytes of the Contract Creation Code above",
    "SwarmSource": "Swarm Source",
    "Code": "Code",
    "Read": "Read Contract",
    "Write": "Write Contract",
    "ConnectToWeb3": "Connect to Web3",
    "ConnectedToWeb3": "Connected Web3",
    "Read Contract Information":"Read Contract Information",
    "copyName":"Copy Method Name",
    "copyPermalink":"Copy Permalink",
    "Query": "Query",
    "write": "write",
    "Responsibility Statement": "Please take note that this is a beta version feature and is provided on an 'as is' and 'as available' basis. Etherscan does not give any warranties and will not be liable for any loss, direct or indirect through continued use of this feature.",
    "ExpandAll":"Expand All",
    "Reset":"Reset",
    "CollapseAll":"Collapse All"
  },
  "verify": {
    "title": "Verify & Publish Contract Source Code",
    "centerText": "Source code verification provides transparency for users interacting with smart contracts. By uploading the source code, Etherscan will match the compiled code with that on the blockchain. Read more",
    "centerText2": "A simple and structured interface for verifying smart contracts that fit in a single file.",
    "EnterContractDetails": "Enter Contract Details",
    "Verify_&_Publish": "Verify & Publish",
    "Please": "Please enter the Contract Address you would like to verify",
    "Please1": "Please select Compiler Type",
    "Please2": "Please select Compiler Version",
    "Please3": "Please select Open Source License Type",
    "Continue": "Continue",
    "Reset": "Reset",

    "Upload": "Upload Contract Source Code",
    "Upload1": "1.If the contract compiles correctly at REMIX, it should also compile correctly here.",
    "Upload2": "2.We have limited support for verifying contracts created by another contract and there is a timeout of up to 45 seconds for each contract compiled.",
    "Upload3": "3.For programatic contract verification, check out the Contract API Endpoint.",
    "ContractAddres": "Contract Address",
    "CompilerType": "Compiler Type",
    "CompilerVersion": "Compiler Version",
    "EnterThe": "Enter the Solidity Contract Code below",
    "Advanced": "Advanced Configuration",
    "Optimization": "Optimization",
    "OptimizationTips": "Select the option you used when compiling this contract",
    "Runs": "Runs (Optimizer)",
    "RunsTips": "<p class='text-white text-start'>(Applicable when Optimization = Yes) <br>Optimize for how many times you intend to run the code. Lower values will optimize more for initial deployment cost, higher values will optimize more for high-frequency usage.</p>",
    "EVM": "EVM Version to target ",
    "EVATips": "When you compile your contract code you can specify the Ethereum virtual machine version to compile for to avoid particular features or behaviours.",
    "License": "License Type",
    "LicenseTips": "Contract Source Code License Type, click for more info",
    "Constructor": "Constructor Arguments ABI-encoded",
    "Constructor1": "For contracts that were created with constructor parameters",
    "ConstructorTips": "This option ONLY applies to contracts that accept constructor arguments, if you are unsure you most likely dont need this. The constructor arguments should be in ABI-ENCODED values and will be appended to the contract bytecode.",
    "For": "For additional information on Constructor Arguments, see our KB entry",
    "Contract": "Contract Library Address",
    "Contract1": "for contracts that use libraries, supports up to 10 libraries",
    "Note": "Note: Library names are case sensitive and affects the keccak library hash",
    "Add": "Add library",
    "Library_Name": "Library Name",
    "Enter": "Enter library name",
    "Library_Contract": "Library Contract Address",
    "Verify": "Verify and Publish",
    "Submit": "Submit source code for verification",
    "ResetTips": "Reset this page"
  },
  "Rule": {
    "Table_name": "name"
  },
  "contractList": {
    "title": "前 100 名 NOVAI 持有者",
    "Ranking": "Ranking",
    "Address": "Address",
    "TransactionTime": "Transaction time",
    "TotalTxs":"Total Txs",
    "Balance": "Balance",
    "BalanceRatio": "Balance ratio"
  }
}
